xlab="Nota Maxima de Acceso",ylab="Mejor nota conseguida en la Universidad")
xyplot(allStudentsCleanAccess$firstUnivGrade~allStudentsCleanAccess$maxAccessGrade,type = c("p","r"),
xlab="Nota Maxima de Acceso",ylab="Primera convocatoria en la Universidad")
xyplot(allStudentsCleanAccess$maxUnivGrade~allStudentsCleanAccess$maxAccessGrade,type = c("p","r"),
xlab="Nota Maxima de Acceso",ylab="Mejor nota conseguida en la Universidad")
xyplot(allStudentsCleanAccess$firstUnivGrade~allStudentsCleanAccess$maxAccessGrade,type = c("p","r"),
xlab="Nota Maxima de Acceso",ylab="Primera convocatoria en la Universidad")
xyplot(allStudentsCleanBach$firstUnivGrade~allStudentsCleanBach$maxBachGrade,type = c("p","r"),
xlab="Nota Maxima de Bachillerato",ylab="Primera convocatoria en la Universidad")
xyplot(allStudentsCleanAccess$firstUnivGrade~allStudentsCleanAccess$maxAccessGrade,type = c("p","r"),
xlab="Nota Maxima de Acceso",ylab="Primera convocatoria en la Universidad")
jpeg("MaxAcess_VS_BestAtUni.jpg")
xyplot(allStudentsCleanAccess$maxUnivGrade~allStudentsCleanAccess$maxAccessGrade,type = c("p","r"),
xlab="Nota Maxima de Acceso",ylab="Mejor nota conseguida en la Universidad")
dev.off()
# first grade they ever obtained at university vs.
#                     maximum grade they ever obtained at access point
jpeg("MaxAccess_VS_FirstAtUni.jpg")
xyplot(allStudentsCleanAccess$firstUnivGrade~allStudentsCleanAccess$maxAccessGrade,type = c("p","r"),
xlab="Nota Maxima de Acceso",ylab="Primera convocatoria en la Universidad")
dev.off()
# maximum grade they ever obtained at university vs.
#                     maximum grade they ever obtained at Highschool
jpeg("MaxBach_VS_FirstAtUni.jpg")
xyplot(allStudentsCleanBach$firstUnivGrade~allStudentsCleanBach$maxBachGrade,type = c("p","r"),
xlab="Nota Maxima de Bachillerato",ylab="Primera convocatoria en la Universidad")
dev.off()
source('~/Documents/15-Pedro/crunch02.R')
pdf("MaxBach_VS_FirstAtUni.pdf")
xyplot(allStudentsCleanBach$firstUnivGrade~allStudentsCleanBach$maxBachGrade,type = c("p","r"),
xlab="Nota Maxima de Bachillerato",ylab="Primera convocatoria en la Universidad")
dev.off()
pdf("MaxAcess_VS_BestAtUni.pdf")
xyplot(allStudentsCleanAccess$maxUnivGrade~allStudentsCleanAccess$maxAccessGrade,type = c("p","r"),
xlab="Nota Maxima de Acceso",ylab="Mejor nota conseguida en la Universidad")
dev.off()
# first grade they ever obtained at university vs.
#                     maximum grade they ever obtained at access point
pdf("MaxAccess_VS_FirstAtUni.pdf")
xyplot(allStudentsCleanAccess$firstUnivGrade~allStudentsCleanAccess$maxAccessGrade,type = c("p","r"),
xlab="Nota Maxima de Acceso",ylab="Primera convocatoria en la Universidad")
dev.off()
# Create table with all derivated data
allStudents<-maxUnivGrade
rm(maxUnivGrade)
allStudents<-merge(allStudents,maxBachGrade,by="StudentId")
rm(maxBachGrade)
allStudents<-merge(allStudents,maxAccessGrade,by="StudentId")
rm(maxAccessGrade)
allStudents<-merge(allStudents,firstGrade,by="StudentId")
rm(firstGrade)
View(allStudentsCleanAccess)
rm(sortByDateUnivGrade)
sortByDateUnivGrade=alcala[order(alcala$StudentId,alcala$Date),]
firstGrade<-by(sortByDateUnivGrade,sortByDateUnivGrade$StudentId,head,n=1)
rm(sortByDateUnivGrade)
firstGrade<-do.call("rbind", as.list(firstGrade))
firstGrade<-firstGrade[,c(1,3)]
colnames(firstGrade)<-c("StudentId","firstUnivGrade")
View(firstGrade)
sortByDateBachType=acceso[order(access$StudentId,access$Date),]
sortByDateBachType=acces[order(access$StudentId,access$Date),]
sortByDateBachType=access[order(access$StudentId,access$Date),]
firstType<-by(sortByDateBachType,sortByDateBachType$StudentId,head,n=1)
sortByDateBachType=access[order(access$StudentId,access$Date),]
firstType<-by(sortByDateBachType,sortByDateBachType$StudentId,head,n=1)
firstType<-do.call("rbind", as.list(firstType))
View(firstType)
firstType<-firstType[,c(1,3)]
View(firstType)
allStudents<-merge(allStudents,firstType,by="StudentId")
rm(firstType)
View(allStudents)
barplot(allStudents$firstUnivGrade~allStudents$TipoBach)
barplot(allStudents$firstUnivGrade,allStudents$TipoBach)
plot(allStudents$firstUnivGrade,pch=as.integer(allStudents$TipoBach))
plot(allStudents$firstUnivGrade,col=as.integer(allStudents$TipoBach))
factor(allStudents$TipoBach)
levels(factor(allStudents$TipoBach))
as.integer(allStudents$TipoBach)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
ggplot(allStudents$firstUnivGrade,color=as.integer(allStudents$TipoBach))
ggplot(allStudents$firstUnivGrade,color=(allStudents$TipoBach))
ggplot(data.frame(allStudents$firstUnivGrade),color=(allStudents$TipoBach))
ggplot(data.frame(allStudents$StudentId,allStudents$firstUnivGrade),color=(allStudents$TipoBach))
ggplot(cbind(allStudents$StudentId,allStudents$firstUnivGrade),color=(allStudents$TipoBach))
ggplot(allStudents$StudentId,allStudents$firstUnivGrade,color=(allStudents$TipoBach))
ggplot(allStudents$StudentId,allStudents$firstUnivGrade)
ggplot(data.frame(allStudents$StudentId,allStudents$firstUnivGrade))
ggplot(allStudents,aes(x=allStudents$StudentId,y=allStudents$firstUnivGrade))
ggplot(data.frame(allStudents$StudentId,allStudents$firstUnivGrade),aes(x=allStudents$StudentId,y=allStudents$firstUnivGrade))
ggplot(data.frame(allStudents$StudentId,allStudents$firstUnivGrade),aes(x=allStudents$StudentId,color=allStudents$firstUnivGrade))
ggplot(allStudents,aes(x=allStudents$StudentId,y=allStudents$firstUnivGrade),color=(allStudents$TipoBach))
ggplot(allStudents,aes(x=allStudents$StudentId,y=allStudents$firstUnivGrade,color=factor(allStudents$TipoBach))
)
ggplot(allStudents,aes(x=allStudents$StudentId,y=allStudents$firstUnivGrade,color=factor(allStudents$TipoBach)))
ggplot(allStudents,aes(x=StudentId,y=allStudents$firstUnivGrade,color=factor(allStudents$TipoBach)))
ggplot(allStudents,aes(x=StudentId,y=firstUnivGrade,color=factor(TipoBach)))
ggplot(allStudents)
ggplot(as.data.frame(allStudents))
ggplot(data=as.data.frame(allStudents))
d<-ggplot(data=as.data.frame(allStudents))
d<-d+geom_line()
d
d<-ggplot(data=as.data.frame(allStudents),aes(x=StudentId,y=firstUnivGrade,color=factor(TipoBach))))
d<-ggplot(data=as.data.frame(allStudents),aes(x=StudentId,y=firstUnivGrade,color=factor(TipoBach)))
d<-d+geom_line()
d
d+geom_line()
d<-ggplot(data=as.data.frame(allStudents),aes(x=StudentId,y=firstUnivGrade,color=factor(TipoBach)))
d+geom_line()
d+geom_points()
d+geom_point()
d<-ggplot(data=as.data.frame(allStudents),aes(x=maxAccessGrade,y=firstUnivGrade,color=factor(TipoBach)))
d+geom_point()
d<-ggplot(data=as.data.frame(allStudents),aes(x=maxAccessGrade,y=firstUnivGrade,shape=color=factor(TipoBach)))
d<-ggplot(data=as.data.frame(allStudents),
aes(x=maxAccessGrade,y=firstUnivGrade,shape=factor(TipoBach),color=factor(TipoBach)))
d+geom_point()
which(allStudents$TipoBach==U01)
which(allStudents$TipoBach=="U01")
which(allStudents$TipoBach=="U04")
which(allStudents$TipoBach=="S01")
which(allStudents$TipoBach=="S01")
which(allStudents$TipoBach=="A01")
which(allStudents$TipoBach=="F02")
allStudents[allStudents$TipoBach=="F02"]
allStudents$TipoBach[allStudents$TipoBach=="F02"]="Otros"
allStudents$TipoBach[allStudents$TipoBach=="F02"]<-c("Otros")
allStudents$TipoBach[allStudents$TipoBach=="F02"]<-as.factor("Otros")
allStudents$TipoBach[allStudents$TipoBach=="F02"]<-as.factor("S01")
allStudents$TipoBach[allStudents$TipoBach=="F02"]<-"S01"
allStudents$TipoBach[allStudents$TipoBach=="F02"]<-"S01"
d<-ggplot(data=as.data.frame(allStudents),
aes(x=maxAccessGrade,y=firstUnivGrade,shape=factor(TipoBach),color=factor(TipoBach)))
d+geom_point()
allStudents$TipoBach[allStudents$TipoBach=="F02"]<-"S01"
allStudents$TipoBach[allStudents$TipoBach=="U01"]<-"S01"
allStudents$TipoBach[allStudents$TipoBach=="A01"]<-"S01"
allStudents$TipoBach[allStudents$TipoBach=="U04"]<-"S01"
d<-ggplot(data=as.data.frame(allStudents),
aes(x=maxAccessGrade,y=firstUnivGrade,shape=factor(TipoBach),color=factor(TipoBach)))
d+geom_point()
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,shape=factor(TipoBach),color=factor(TipoBach)))
d+geom_point()
allStudentsCleanAccess<-allStudents[is.finite(allStudents$maxAccessGrade),]
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,shape=factor(TipoBach),color=factor(TipoBach)))
d+geom_point()
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach),size=3))
d+geom_point()
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach),size=2))
d+geom_point()
source('~/.active-rstudio-document')
allStudents$TipoBach[allStudents$TipoBach=="F02"]<-"S01"
allStudents$TipoBach[allStudents$TipoBach=="U01"]<-"S01"
allStudents$TipoBach[allStudents$TipoBach=="A01"]<-"S01"
allStudents$TipoBach[allStudents$TipoBach=="U04"]<-"S01"
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach),size=2))
d+geom_point()
View(allStudents)
summary(allStudents)
head(allStudents)
source('~/.active-rstudio-document')
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach),size=2))
d+geom_point()
allStudents$TipoBach[allStudents$TipoBach=="F02"]<-as.factor("S01")
allStudents$TipoBach[allStudents$TipoBach=="U01"]<-"S01"
allStudents$TipoBach[allStudents$TipoBach=="A01"]<-"S01"
allStudents$TipoBach[allStudents$TipoBach=="U04"]<-"S01"
# bpalop -> pedro Que hacemos con los que no tienen nota de acceso
allStudentsCleanAccess<-allStudents[is.finite(allStudents$maxAccessGrade),]
allStudentsCleanBach<-allStudents[is.finite(allStudents$maxBachGrade),]
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach),size=2))
d+geom_point()
source('~/.active-rstudio-document')
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach),size=2))
d+geom_point()
summary(allStudentsCleanAccess$TipoBach)
as.factor("S01")
revalue(iris$Species, c("virginica" = "setosa")) -> iris$Species
source('~/.active-rstudio-document')
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach),size=2))
d+geom_point()
summary(allStudentsCleanAccess$TipoBach)
source('~/.active-rstudio-document')
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach),size=2))
d+geom_point()
View(allStudents)
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d+geom_point()
source('~/.active-rstudio-document')
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d+geom_point()
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach),size=2))
d+geom_point()
source('~/.active-rstudio-document')
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d+geom_point()
sortByDateUnivGrade=alcala[order(alcala$StudentId,alcala$Date),]
firstGrade<-by(sortByDateUnivGrade,sortByDateUnivGrade$StudentId,head,n=1)
rm(sortByDateUnivGrade)
firstGrade<-do.call("rbind", as.list(firstGrade))
View(firstGrade)
sortByDateBachType=access[order(access$StudentId,access$Date),]
firstType<-by(sortByDateBachType,sortByDateBachType$StudentId,head,n=1)
firstType<-do.call("rbind", as.list(firstType))
View(firstType)
d+geom_point(size=2)
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d+geom_point(size=2)
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d+geom_point(size=4)
by(allStudentsCleanAccess,allStudentsCleanAccess$firstUnivGrade,max)
by(allStudentsCleanAccess,allStudentsCleanAccess$TipoBach,max)
by(allStudentsCleanAccess,allStudentsCleanAccess$TipoBach,head,1)
by(allStudentsCleanAccess,allStudentsCleanAccess$TipoBach,mean)
by(allStudentsCleanAccess,allStudentsCleanAccess$TipoBach,mean,1)
ddply(allStudentsCleanAccess,allStudentsCleanAccess$TipoBach,mean,1)
ddply(allStudentsCleanAccess,~TipoBach,mean,1)
ddply(allStudentsCleanAccess,~TipoBach,mean=mean(firstUnivGrade),1)
ddply(allStudentsCleanAccess,~TipoBach,mean=mean(firstUnivGrade))
ddply(allStudentsCleanAccess,~TipoBach,sumarise,mean=mean(firstUnivGrade))
ddply(allStudentsCleanAccess,~TipoBach,summarise,mean=mean(firstUnivGrade))
ddply(allStudentsCleanAccess,~TipoBach,summarise,mean=mean(firstUnivGrade),median=median(firstUnivGrade))
ddply(allStudentsCleanAccess,~TipoBach,summarise,mean=mean(firstUnivGrade),median=quantile(firstUnivGrade,0.5))
ddply(allStudentsCleanAccess,~TipoBach,summarise,mean=mean(firstUnivGrade),median=quantile(firstUnivGrade,0.25))
median=quantile(firstUnivGrade,c(0.25,0.5))
ddply(allStudentsCleanAccess,~TipoBach,summarise,
mean=mean(firstUnivGrade),
median=quantile(firstUnivGrade,c(0.25,0.5))
)
ddply(allStudentsCleanAccess,~TipoBach,summarise,
mean=mean(firstUnivGrade),
q1=quantile(firstUnivGrade,0.25),
q2=quantile(firstUnivGrade,0.25),
q3=quantile(firstUnivGrade,0.25))
ddply(allStudentsCleanAccess,~TipoBach,summarise,
mean=mean(firstUnivGrade),
q1=quantile(firstUnivGrade,0.25),
q2=quantile(firstUnivGrade,0.5),
q3=quantile(firstUnivGrade,0.75))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
prepareTables()
# In this plot we confirm that, independently of accessGrade,
# CT Highschoolers perform better than HC in their first attempt
pdf("BachType.pdf")
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d<-d+geom_point(size=4)
dev.off()
prepareTables()
source('~/Documents/15-Pedro/crunch02.R')
prepareTables()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Documents/15-Pedro/crunch02.R')
ddply(allStudentsCleanAccess,~TipoBach,summarise,
mean=mean(firstUnivGrade),
q1=quantile(firstUnivGrade,0.25),
q2=quantile(firstUnivGrade,0.5),
q3=quantile(firstUnivGrade,0.75))
PDF_BachType_VS_FirstAtUni<-function(){
# In this plot we confirm that, independently of accessGrade,
# CT Highschoolers perform better than HC in their first attempt
pdf("BachType.pdf")
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d<-d+geom_point(size=4)
dev.off()
ggsave("BachType.pdf",d)
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d<-d+geom_point(size=4)
ggsave("BachType.pdf",d)
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d<-d+geom_point(size=4)
ggsave("BachType.pdf")
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
)
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d<-d+geom_point(size=4)
ggsave("BachType.pdf")
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach+1)))
d<-d+geom_point(size=4)
ggsave("BachType.pdf")
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d<-d+geom_point(size=4)
ggsave("BachType.pdf")
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d<-d+geom_point(size=3)
ggsave("BachType.pdf")
boxplot(allStudentsCleanAccess$firstUnivGrade~allStudentsCleanAccess$TipoBach)
source('~/.active-rstudio-document')
# In this plot we confirm that, independently of accessGrade,
# CT Highschoolers perform better than HC in their first attempt
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGr
)
)
# In this plot we confirm that, independently of accessGrade,
# CT Highschoolers perform better than HC in their first attempt
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d<-d+geom_point(size=3)
d
# In this plot we confirm that, independently of accessGrade,
# CT Highschoolers perform better than HC in their first attempt
d<-ggplot(data=as.data.frame(allStudentsCleanAccess),
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
d<-d+geom_point(size=3)
d
boxplot(allStudentsCleanAccess$firstUnivGrade~allStudentsCleanAccess$TipoBach)
ddply(allStudentsCleanAccess,~TipoBach,summarise,
mean=mean(firstUnivGrade),
q1=quantile(firstUnivGrade,0.25),
q2=quantile(firstUnivGrade,0.5),
q3=quantile(firstUnivGrade,0.75))
View(allStudents)
which(allStudents$TipoBach=="GRCT")
which(allStudents$TipoBach=="GRCT" | allStudents$TipoBach=="GRHC")
which(allStudents$TipoBach=="GRHC")
which(allStudents$TipoBach=="GRHC" & is.na(allStudents$GradeSocMath))
which(allStudents$TipoBach=="GRHC" & is.na(allStudents$GradeSocMath) & is.na(allStudents$GradeMath))
which(allStudents$TipoBach=="GRHC" & !is.na(allStudents$GradeMath))
which(allStudents$TipoBach=="GRHC" & is.na(allStudents$GradeMath))
which(allStudents$TipoBach=="GRHC" & !is.na(allStudents$GradeSocMath))
noMathBefore<-which(allStudents$TipoBach=="GRHC" & is.na(allStudents$GradeSocMath))
socialMathBefore<-which(allStudents$TipoBach=="GRHC" & !is.na(allStudents$GradeSocMath))
scientMathBefore<-which(allStudents$TipoBach=="GRCT" & !is.na(allStudents$GradeMath))
noMathBefore+socialMathBefore
paste(noMathBefore,socialMathBefore)
union(noMathBefore,socialMathBefore)
union(union(noMathBefore,socialMathBefore),scientMathBefore)
allStudents[socialMathBefore]
allStudents[socialMathBefore,4]
allStudents$TipoBach[socialMathBefore]
setdiff(seq(1,length(allStudents[,1])),union(union(noMathBefore,socialMathBefore),scientMathBefore)
)
setdiff(seq(1,length(allStudents[,1])),union(union(noMathBefore,socialMathBefore),scientMathBefore))
setdiff(seq(1,length(allStudents[,1])),union(union(noMathBefore,socialMathBefore),seq(1,2)))
setdiff(seq(1,length(allStudents[,1])),,seq(1,100)))
setdiff(seq(1,length(allStudents[,1])),seq(1,100)))
setdiff(seq(1,length(allStudents[,1])),seq(1,100))
length(allStudents[,1])
length(allStudents[1,])
length(allStudents)
length(allStudents[,])
length(allStudents[,1])
length(allStudents$TipoBach)
setdiff(seq(1,length(allStudents$TipoBach)),union(union(noMathBefore,socialMathBefore),scientMathBefore))
rm(noMathBefore)
socialNoMathBefore<-which(allStudents$TipoBach=="GRHC" & is.na(allStudents$GradeSocMath))
socialMathBefore<-which(allStudents$TipoBach=="GRHC" & !is.na(allStudents$GradeSocMath))
scientNoMathBefore<-which(allStudents$TipoBach=="GRCT" & is.na(allStudents$GradeMath))
scientMathBefore<-which(allStudents$TipoBach=="GRCT" & !is.na(allStudents$GradeMath))
todos<-union(union(union(socialNoMathBefore,socialMathBefore),scientNoMathBefore),scientMathBefore)
setdiff(seq(1,nrow(allStudents),todos)
)
setdiff(seq(1,nrow(allStudents)),todos)
allStudents[setdiff(seq(1,nrow(allStudents)),todos)]
socialNoMathBefore<-which(allStudentsCleanAccess$TipoBach=="GRHC" & is.na(allStudentsCleanAccess$GradeSocMath))
socialMathBefore<-which(allStudentsCleanAccess$TipoBach=="GRHC" & !is.na(allStudentsCleanAccess$GradeSocMath))
scientNoMathBefore<-which(allStudentsCleanAccess$TipoBach=="GRCT" & is.na(allStudentsCleanAccess$GradeMath))
scientMathBefore<-which(allStudentsCleanAccess$TipoBach=="GRCT" & !is.na(allStudentsCleanAccess$GradeMath))
idxTodos<-union(union(union(socialNoMathBefore,socialMathBefore),scientNoMathBefore),scientMathBefore)
d<-data.frame(TipoBach=allStudentsCleanAccess$TipoBach[idxTodos],
firstUnivGrade=allStudentsCleanAccess$firstUnivGrade[idxTodos],
maxAccessGrade=allStudentsCleanAccess$maxUnivGrade[idxTodos])
View(d)
tt<-head(socialMathBefore)
tt
allStudentsCleanAccess$firstUnivGrade[tt]
cbind(allStudentsCleanAccess$firstUnivGrade[tt],"GRHC-NM"
)
d<-data.frame("GRHC-NM",allStudentsCleanAccess$TipoBach[tt])
View(d)
anAccess$GradeMath))
d<-data.frame(TipoBach="GRHC-NM",
allStudentsCleanAccess$TipoBach[socialNoMathBefore], #bpr delete later
firstUnivGrade=allStudentsCleanAccess$firstUnivGrade[socialNoMathBefore],
maxAccessGrade=allStudentsCleanAccess$maxAccessGrade[socialNoMathBefore])
View(d)
graph<-ggplot(data=d,
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
graph<-graph+geom_point(size=3)
ggplot(graph)
graph
d<-cbind(d,data.frame(TipoBach="GRHC-M",
allStudentsCleanAccess$TipoBach[socialNoMathBefore], #bpr delete later
firstUnivGrade=allStudentsCleanAccess$firstUnivGrade[socialMathBefore],
maxAccessGrade=allStudentsCleanAccess$maxAccessGrade[socialMathBefore]
))
d<-cbind(d,data.frame(TipoBach="GRHC-M",
allStudentsCleanAccess$TipoBach[socialMathBefore], #bpr delete later
firstUnivGrade=allStudentsCleanAccess$firstUnivGrade[socialMathBefore],
maxAccessGrade=allStudentsCleanAccess$maxAccessGrade[socialMathBefore]
))
d<-data.frame(TipoBach="GRHC-NM",
allStudentsCleanAccess$TipoBach[socialNoMathBefore], #bpr delete later
firstUnivGrade=allStudentsCleanAccess$firstUnivGrade[socialNoMathBefore],
maxAccessGrade=allStudentsCleanAccess$maxAccessGrade[socialNoMathBefore])
d<-cbind(d,data.frame(TipoBach="GRHC-M",
allStudentsCleanAccess$TipoBach[socialMathBefore], #bpr delete later
firstUnivGrade=allStudentsCleanAccess$firstUnivGrade[socialMathBefore],
maxAccessGrade=allStudentsCleanAccess$maxAccessGrade[socialMathBefore]
))
d<-data.frame(TipoBach="GRHC-NM",
allStudentsCleanAccess$TipoBach[socialNoMathBefore], #bpr delete later
firstUnivGrade=allStudentsCleanAccess$firstUnivGrade[socialNoMathBefore],
maxAccessGrade=allStudentsCleanAccess$maxAccessGrade[socialNoMathBefore])
d<-rbind(d,data.frame(TipoBach="GRHC-M",
allStudentsCleanAccess$TipoBach[socialMathBefore], #bpr delete later
firstUnivGrade=allStudentsCleanAccess$firstUnivGrade[socialMathBefore],
maxAccessGrade=allStudentsCleanAccess$maxAccessGrade[socialMathBefore]
))
d<-data.frame(TipoBach="GRHC-NM",
tmp=allStudentsCleanAccess$TipoBach[socialNoMathBefore], #bpr delete later
firstUnivGrade=allStudentsCleanAccess$firstUnivGrade[socialNoMathBefore],
maxAccessGrade=allStudentsCleanAccess$maxAccessGrade[socialNoMathBefore])
d<-rbind(d,data.frame(TipoBach="GRHC-M",
tmp=allStudentsCleanAccess$TipoBach[socialMathBefore], #bpr delete later
firstUnivGrade=allStudentsCleanAccess$firstUnivGrade[socialMathBefore],
maxAccessGrade=allStudentsCleanAccess$maxAccessGrade[socialMathBefore]
))
graph<-ggplot(data=d,
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
graph<-graph+geom_point(size=3)
graph
graph<-ggplot(data=d,
aes(x=maxAccessGrade,y=firstUnivGrade,
shape=factor(TipoBach),color=factor(TipoBach)))
graph<-graph+geom_point(size=3)
PDF_MathAccess_VS_FirstAtUni
PDF_MathAccess_VS_FirstAtUni()
source('~/Documents/15-Pedro/crunch02.R')
PDF_MathAccess_VS_FirstAtUni
graph
source('~/.active-rstudio-document')
PDF_MathAccess_VS_FirstAtUni()
source('~/.active-rstudio-document')
PDF_MathAccess_VS_FirstAtUni()
source('~/Documents/15-Pedro/crunch02.R')
PDF_MathAccess_VS_FirstAtUni()
source('~/.active-rstudio-document')
PDF_MathAccess_VS_FirstAtUni()
source('~/.active-rstudio-document')
PDF_MathAccess_VS_FirstAtUni()
source('~/.active-rstudio-document')
PDF_MathAccess_VS_FirstAtUni()
source('~/.active-rstudio-document')
PDF_MathAccess_VS_FirstAtUni()
allStudents[is.finite(allStudents$maxAccessGrade),]
allStudents[!is.finite(allStudents$maxAccessGrade),]
setwd("~/Documents/15-Pedro")
alcala<-read.csv("CalificacionesSIalcalaCabecerasRAW.csv",dec=",",header=TRUE,sep=";",row.names=NULL)
acceso<-read.csv("datosaccesoSIalcala-limpiosCabecerasRAW.csv",dec=",",header=TRUE,sep=";",row.names=NULL)
View(acceso)
source('~/Documents/15-Pedro/crunch01.R')
source('~/Documents/15-Pedro/crunch02.R')
PDF_MathAccess_VS_FirstAtUni()
